USE hotel

SELECT * FROM oyo
SELECT * FROM hotels


--- Q1. Show the rank of the cities based on their total booking.
SELECT h.city,COUNT(o.booking_id) AS total_bookings,
DENSE_RANK() OVER (ORDER BY COUNT(o.booking_id) DESC) AS DenseRank
FROM oyo o INNER JOIN hotels h
ON o.hotel_id = h.hotel_id
GROUP BY h.city
ORDER BY DenseRank

--- Q2. Find city wise average room rate. 
SELECT h.city,ROUND(AVG(o.amount),0) AS Average_room_rate
FROM oyo o INNER JOIN hotels h
ON o.hotel_id = h.hotel_id
GROUP BY h.city
ORDER BY Average_room_rate DESC

---similarly 

--- Q3. Find hotels wise  average room rate. 
SELECT hotel_id,ROUND(AVG(amount),0) AS Average_room_rate
FROM oyo 
GROUP BY hotel_id
ORDER BY Average_room_rate DESC

--- Q4. Find the total number of hotels available in each city.
SELECT city,COUNT(DISTINCT(hotel_id))AS num_of_hotels
FROM hotels
GROUP BY city
ORDER BY num_of_hotels DESC

--- Q5. Display the  total number of bookings cancelled in each city. 
 SELECT h.city,COUNT(o.status) AS total_cancelled_bookings
FROM oyo o INNER JOIN hotels h
ON o.hotel_id = h.hotel_id
WHERE o.status='cancelled'
GROUP BY h.city
ORDER BY total_cancelled_bookings DESC  

---Similarly

--- Q6. Display the month wise total number of bookings cancelled in each city. 
 SELECT h.city,
DATENAME (MONTH,o.date_of_booking) AS month_name,
COUNT(o.booking_id) AS total_cancelled_bookings
FROM oyo o INNER JOIN hotels h
ON o.hotel_id = h.hotel_id
WHERE o.status='cancelled'
GROUP BY h.city,DATENAME (MONTH,o.date_of_booking)
ORDER BY (DATENAME (MONTH,o.date_of_booking)) DESC


---Q7. Display the total amount and total number of the bookings according to their Status:- 'cancelled', 'stayed' & 'No show'.
(SELECT status,COUNT(status) as Total_Bookings, SUM(amount) AS Total_Amount
FROM oyo
WHERE status= 'Stayed'
GROUP BY status)
UNION
(SELECT status, COUNT(status) as Total_Bookings, SUM(amount)ASTotal_Amount
FROM oyo
WHERE status= 'Cancelled'
GROUP BY status) 
UNION
(SELECT status, COUNT(status) as Total_Bookings, SUM(amount) AS Total_Amount
FROM oyo
WHERE status= 'No show'
GROUP BY status)


---Q8. Show the distribution of bookings of different cities based on the status of booking.
Select h.city, 
COUNT(o.booking_id) AS Total_booking,
COUNT(Case when o.status = 'stayed' THEN o.booking_id End) As Total_stayed,
COUNT(Case when o.status = 'Cancelled' THEN o.booking_id End) As Total_cancelled,
COUNT(Case when o.status = 'No Show' THEN o.booking_id End) As Total_No_Show
FROM oyo o INNER JOIN hotels h
ON o.hotel_id = h.hotel_id
WHERE o.status IN ('stayed', 'cancelled','No Show')
GROUP BY h.city

--- Q9. Show the total revenue generated by each city.
SELECT h.city,SUM(o.amount) AS Total_revenue
FROM oyo o INNER JOIN hotels h
ON o.hotel_id = h.hotel_id
GROUP BY h.city

---similarly

--- Q10. Show the month wise revenue generated by each city.
SELECT h.city,
DATENAME (MONTH,o.date_of_booking) AS month_name,
SUM(o.amount) AS Total_revenue
FROM oyo o INNER JOIN hotels h
ON o.hotel_id = h.hotel_id
GROUP BY h.city,DATENAME (MONTH,o.date_of_booking)

--- Q11. Display the total number of days ,total amount And Average amount paid per day by each customer stayed in the hotels.
SELECT hotel_id,customer_id,amount AS total_amount,
DATEDIFF(Day,check_in,check_out) AS total_days,
ROUND(amount/DATEDIFF(Day,check_in,check_out),0)AS Average_amount_per_day
FROM oyo
WHERE status='stayed'
ORDER BY total_days DESC

--- Q12. Show the percentage discount provided by different hotels.
 Select hotel_id, SUM(amount) As Total_Amount,SUM(discount) As Total_Discount_Given,SUM(amount) - SUM(discount) As Actual_Amount_Payed, ROUND(SUM(discount)*100/SUM(amount),1) As Percentage_discount_Given
From oyo
Group By hotel_id
Order By SUM(discount) DESC

--- Q13. Show the difference in number of bookings month by month.
Select MONTH(check_in) as Month_No, DATENAME(MONTH, check_in) as month, COUNT(booking_id) as Total_booking, LAG(COUNT(booking_id))OVER(ORDER BY MONTH(check_in)) AS lag_Booking,
COUNT(booking_id) - LAG(COUNT(booking_id))OVER(ORDER BY Month(check_in)) AS Difference_
From oyo
Group By MONTH(check_in),DATENAME(month, check_in)
Order By MONTH(check_in) ASC
